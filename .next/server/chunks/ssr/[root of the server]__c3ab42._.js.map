{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/juan.lizarraga/Documents/projects/nextjs/NextJS---CRUD/src/lib/prisma.js"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\"\r\n\r\nexport const prisma = new PrismaClient()"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,SAAS,IAAI,6HAAA,CAAA,eAAY"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/juan.lizarraga/Documents/projects/nextjs/NextJS---CRUD/src/app/api/task/route.js"],"sourcesContent":["import {prisma} from '@/lib/prisma'\r\nimport { NextResponse } from \"next/server\"\r\n\r\nexport async function GET(){\r\n    try {\r\n        const task = await prisma.task.findMany()\r\n        return NextResponse.json(task)\r\n    } catch (error) {\r\n        console.log(error.message)\r\n    }\r\n}\r\nexport async function POST(request){\r\n    try {\r\n        const {title, description} = await request.json()\r\n        const newTask = await prisma.task.create({\r\n            data: {\r\n                title,\r\n                description\r\n            }\r\n        })\r\n        return NextResponse.json(newTask)\r\n    } catch (error) {\r\n        return NextResponse.json({error: error.message}).status(500)\r\n    }\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe;IAClB,IAAI;QACA,MAAM,OAAO,MAAM,oHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,QAAQ;QACvC,OAAO,8HAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC7B,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC,MAAM,OAAO;IAC7B;AACJ;AACO,eAAe,KAAK,OAAO;IAC9B,IAAI;QACA,MAAM,EAAC,KAAK,EAAE,WAAW,EAAC,GAAG,MAAM,QAAQ,IAAI;QAC/C,MAAM,UAAU,MAAM,oHAAA,CAAA,SAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACrC,MAAM;gBACF;gBACA;YACJ;QACJ;QACA,OAAO,8HAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC7B,EAAE,OAAO,OAAO;QACZ,OAAO,8HAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,OAAO,MAAM,OAAO;QAAA,GAAG,MAAM,CAAC;IAC5D;AACJ"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/juan.lizarraga/Documents/projects/nextjs/NextJS---CRUD/src/services/tasks.js"],"sourcesContent":["import { POST } from \"@/app/api/task/route\"\r\n\r\n\r\n\r\nexport async function createTask({title, description}){\r\n    try {\r\n        const res = await fetch('/api/task', {\r\n            method: 'POST',\r\n            body: JSON.stringify({title, description}),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        const data = await res.json()\r\n        return data\r\n    } catch (error) {\r\n        console.log({error: error.message})\r\n    }\r\n}"],"names":[],"mappings":";;;AAAA;;AAIO,eAAe,WAAW,EAAC,KAAK,EAAE,WAAW,EAAC;IACjD,IAAI;QACA,MAAM,MAAM,MAAM,MAAM,aAAa;YACjC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAC;gBAAO;YAAW;YACxC,SAAS;gBACL,gBAAgB;YACpB;QACJ;QACA,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,GAAG,CAAC;YAAC,OAAO,MAAM,OAAO;QAAA;IACrC;AACJ"}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/juan.lizarraga/Documents/projects/nextjs/NextJS---CRUD/src/app/new-task/page.jsx"],"sourcesContent":["\"use client\"\r\nimport { useState } from 'react'\r\nimport { createTask } from '@/services/tasks'\r\nimport { toast } from 'react-toastify'\r\nimport { useRouter } from 'next/navigation'\r\nexport default function NewTask() {\r\n  const defaultValues = {\r\n      title: '',\r\n      description: ''\r\n  }\r\n  const router = useRouter()\r\n  const [values, setValues] = useState(defaultValues)\r\n\r\n  const handleChange = (e) => {\r\n    const {id, value} = e.target\r\n    setValues(values => ({\r\n      ...values,\r\n      [id]: value\r\n    }))\r\n  }\r\n  \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const data =  await createTask(values)\r\n    if(!data){\r\n        toast.error('Hubo un error')\r\n        setValues(defaultValues)\r\n        return\r\n    }\r\n      toast.success('Cliente registrado de exitosamente')\r\n      router.push('/')\r\n      setValues(defaultValues)\r\n    \r\n  }\r\n  return (\r\n    <>\r\n      <div className=' container mx-auto w-1/3 mt-15 '>\r\n        <h1 className=' text-3xl text-center font-bold mb-10'>Registro de clientes</h1>\r\n          <form \r\n            className=' bg-white h-2/3 flex flex-col items-center space-y-10 p-10 rounded-xl shadow-xl'\r\n            \r\n            onSubmit={handleSubmit}>\r\n            <h1 className=' text-center text-2xl font-bold'>LLene el siguiente formulario para registrar un nuevo cliente</h1>\r\n              <label htmlFor=\"title\"\r\n                className=' m-1 self-start font-bold text-md'\r\n              >Nombre del cliente</label>\r\n              <input \r\n                  type=\"text\"\r\n                  id='title'\r\n                  placeholder='Nombre'\r\n                  value={values.title}\r\n                  onChange={handleChange}\r\n                  className=' bg-slate-100 border border-slate-500 w-full rounded-sm p-2 text-black'\r\n              />\r\n              <label htmlFor=\"description\"\r\n                className=' m-1 self-start font-bold text-md'\r\n              >Descripcion o datos del cliente del cliente</label>\r\n              <textarea\r\n                 name=\"\" id=\"description\" rows=\"3\"\r\n                 className='  bg-slate-100 border border-slate-500 w-full rounded-sm p-2'\r\n                 placeholder='Descripcion'   \r\n                 value={values.description}\r\n                 onChange={handleChange}\r\n              ></textarea>\r\n              <button \r\n                type='submit'\r\n                className=' bg-sky-500 border hover:bg-sky-600 cursor-pointer border-slate-500 w-full p rounded-lg text-white font-bold text-xl p-2'\r\n              >Registrar Cliente</button>\r\n          </form>\r\n      </div>\r\n        \r\n    </>\r\n    \r\n  )\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AAJA;;;;;;AAKe,SAAS;IACtB,MAAM,gBAAgB;QAClB,OAAO;QACP,aAAa;IACjB;IACA,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,eAAe,CAAC;QACpB,MAAM,EAAC,EAAE,EAAE,KAAK,EAAC,GAAG,EAAE,MAAM;QAC5B,UAAU,CAAA,SAAU,CAAC;gBACnB,GAAG,MAAM;gBACT,CAAC,GAAG,EAAE;YACR,CAAC;IACH;IAGA,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,MAAM,OAAQ,MAAM,CAAA,GAAA,wHAAA,CAAA,aAAU,AAAD,EAAE;QAC/B,IAAG,CAAC,MAAK;YACL,mJAAA,CAAA,QAAK,CAAC,KAAK,CAAC;YACZ,UAAU;YACV;QACJ;QACE,mJAAA,CAAA,QAAK,CAAC,OAAO,CAAC;QACd,OAAO,IAAI,CAAC;QACZ,UAAU;IAEd;IACA,qBACE;kBACE,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAwC;;;;;;8BACpD,8OAAC;oBACC,WAAU;oBAEV,UAAU;;sCACV,8OAAC;4BAAG,WAAU;sCAAkC;;;;;;sCAC9C,8OAAC;4BAAM,SAAQ;4BACb,WAAU;sCACX;;;;;;sCACD,8OAAC;4BACG,MAAK;4BACL,IAAG;4BACH,aAAY;4BACZ,OAAO,OAAO,KAAK;4BACnB,UAAU;4BACV,WAAU;;;;;;sCAEd,8OAAC;4BAAM,SAAQ;4BACb,WAAU;sCACX;;;;;;sCACD,8OAAC;4BACE,MAAK;4BAAG,IAAG;4BAAc,MAAK;4BAC9B,WAAU;4BACV,aAAY;4BACZ,OAAO,OAAO,WAAW;4BACzB,UAAU;;;;;;sCAEb,8OAAC;4BACC,MAAK;4BACL,WAAU;sCACX;;;;;;;;;;;;;;;;;;;AAOf"}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}